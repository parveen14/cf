{
    "Description": "This template deploys an ECS cluster",
    "Parameters": {
        "EnvironmentName": {
            "Description": "An environment name that will be prefixed to resource names",
            "Type": "String"
        },
        "InstanceType": {
            "Description": "Which instance type should we use to build the ECS cluster?",
            "Type": "String",
            "Default": "t2.micro"
        },
        "MinClusterSize": {
            "Description": "Min ECS hosts do you want to initially deploy?",
            "Type": "Number",
            "Default": 1
        },
        "MaxClusterSize": {
            "Description": "Max ECS hosts do you want to deploy?",
            "Type": "Number",
            "Default": 1
        },
        "VPC": {
            "Description": "Choose which VPC this ECS cluster should be deployed to",
            "Type": "AWS::EC2::VPC::Id"
        },
        "Subnets": {
            "Description": "Choose which subnets this ECS cluster should be deployed to",
            "Type": "List<AWS::EC2::Subnet::Id>"
        },
        "SecurityGroup": {
            "Description": "Select the Security Group to use for the ECS cluster hosts",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "ECSAMI": {
            "Description": "ECS-Optimized AMI ID",
            "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
            "Default": "/aws/service/ecs/optimized-ami/amazon-linux/recommended/ami-07ebfd5b3428b6f4d"
        }
    },
    "Resources": {
        "ECSCluster": {
            "Type": "AWS::ECS::Cluster",
            "Properties": {
                "ClusterName": {
                    "Ref": "EnvironmentName"
                }
            }
        },
        "ECSAutoScalingGroup": {
            "DependsOn": "ECSCluster",
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "VPCZoneIdentifier": {
                    "Ref": "Subnets"
                },
                "LaunchConfigurationName": {
                    "Ref": "ECSLaunchConfiguration"
                },
                "MinSize": {
                    "Ref": "MinClusterSize"
                },
                "MaxSize": {
                    "Ref": "MaxClusterSize"
                },
                "DesiredCapacity": {
                    "Ref": "MinClusterSize"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${EnvironmentName} ECS host"
                        },
                        "PropagateAtLaunch": true
                    }
                ]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": "1",
                    "Timeout": "PT15M"
                }
            },
            "UpdatePolicy": {
                "AutoScalingRollingUpdate": {
                    "MinInstancesInService": 1,
                    "MaxBatchSize": 1,
                    "PauseTime": "PT15M",
                    "SuspendProcesses": [
                        "HealthCheck",
                        "ReplaceUnhealthy",
                        "AZRebalance",
                        "AlarmNotification",
                        "ScheduledActions"
                    ],
                    "WaitOnResourceSignals": true
                }
            }
        },
        "ECSLaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": {
                    "Ref": "ECSAMI"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "SecurityGroups": [
                    {
                        "Ref": "SecurityGroup"
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "ECSInstanceProfile"
                }
            }
        },
        "ECSRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": "/",
                "RoleName": {
                    "Fn::Sub": "${EnvironmentName}-ECSRole-${AWS::Region}"
                },
                "AssumeRolePolicyDocument": "{\n    \"Statement\": [{\n        \"Action\": \"sts:AssumeRole\",\n        \"Effect\": \"Allow\",\n        \"Principal\": {\n            \"Service\": \"ec2.amazonaws.com\"\n        }\n    }]\n}\n",
                "Policies": [
                    {
                        "PolicyName": "ecs-service",
                        "PolicyDocument": "{\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"ecs:CreateCluster\",\n            \"ecs:DeregisterContainerInstance\",\n            \"ecs:DiscoverPollEndpoint\",\n            \"ecs:Poll\",\n            \"ecs:RegisterContainerInstance\",\n            \"ecs:StartTelemetrySession\",\n            \"ecs:Submit*\",\n            \"logs:CreateLogStream\",\n            \"logs:PutLogEvents\",\n            \"ecr:BatchCheckLayerAvailability\",\n            \"ecr:BatchGetImage\",\n            \"ecr:GetDownloadUrlForLayer\",\n            \"ecr:GetAuthorizationToken\",\n            \"ssm:DescribeAssociation\",\n            \"ssm:GetDeployablePatchSnapshotForInstance\",\n            \"ssm:GetDocument\",\n            \"ssm:GetManifest\",\n            \"ssm:GetParameters\",\n            \"ssm:ListAssociations\",\n            \"ssm:ListInstanceAssociations\",\n            \"ssm:PutInventory\",\n            \"ssm:PutComplianceItems\",\n            \"ssm:PutConfigurePackageResult\",\n            \"ssm:UpdateAssociationStatus\",\n            \"ssm:UpdateInstanceAssociationStatus\",\n            \"ssm:UpdateInstanceInformation\",\n            \"ec2messages:AcknowledgeMessage\",\n            \"ec2messages:DeleteMessage\",\n            \"ec2messages:FailMessage\",\n            \"ec2messages:GetEndpoint\",\n            \"ec2messages:GetMessages\",\n            \"ec2messages:SendReply\",\n            \"cloudwatch:PutMetricData\",\n            \"ec2:DescribeInstanceStatus\",\n            \"ds:CreateComputer\",\n            \"ds:DescribeDirectories\",\n            \"logs:CreateLogGroup\",\n            \"logs:CreateLogStream\",\n            \"logs:DescribeLogGroups\",\n            \"logs:DescribeLogStreams\",\n            \"logs:PutLogEvents\",\n            \"s3:PutObject\",\n            \"s3:GetObject\",\n            \"s3:AbortMultipartUpload\",\n            \"s3:ListMultipartUploadParts\",\n            \"s3:ListBucket\",\n            \"s3:ListBucketMultipartUploads\"\n        ],\n        \"Resource\": \"*\"\n    }]\n}\n"
                    }
                ]
            }
        },
        "ECSInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "ECSRole"
                    }
                ]
            }
        },
        "ECSServiceAutoScalingRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": {
                        "Action": [
                            "sts:AssumeRole"
                        ],
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "application-autoscaling.amazonaws.com"
                            ]
                        }
                    }
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "ecs-service-autoscaling",
                        "PolicyDocument": {
                            "Statement": {
                                "Effect": "Allow",
                                "Action": [
                                    "application-autoscaling:*",
                                    "cloudwatch:DescribeAlarms",
                                    "cloudwatch:PutMetricAlarm",
                                    "ecs:DescribeServices",
                                    "ecs:UpdateService"
                                ],
                                "Resource": "*"
                            }
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "Cluster": {
            "Description": "A reference to the ECS cluster",
            "Value": {
                "Ref": "ECSCluster"
            }
        },
        "ECSServiceAutoScalingRole": {
            "Description": "A reference to ECS service auto scaling role",
            "Value": {
                "Fn::GetAtt": [
                    "ECSServiceAutoScalingRole",
                    "Arn"
                ]
            }
        },
        "ECSAutoScalingGroupName": {
            "Description": "A reference to ECS AutoScaling Group Name",
            "Value": {
                "Ref": "ECSAutoScalingGroup"
            }
        }
    }
}